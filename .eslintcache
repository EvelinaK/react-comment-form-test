[{"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\operations.js":"1","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\Loader\\Loader.js":"2","D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\store.js":"3","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\CommentList\\commentList.js":"4","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\Form\\form.js":"5","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\CommentList\\commentList.container.js":"6","D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\reducer.js":"7","D:\\project 2020\\GIT\\react-comment-form-test\\src\\App.js":"8","D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\selectors.js":"9","D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\actions.js":"10","D:\\project 2020\\GIT\\react-comment-form-test\\src\\index.js":"11"},{"size":1565,"mtime":1625132297870,"results":"12","hashOfConfig":"13"},{"size":454,"mtime":1613477302760,"results":"14","hashOfConfig":"13"},{"size":702,"mtime":1625132287035,"results":"15","hashOfConfig":"13"},{"size":1560,"mtime":1625132494967,"results":"16","hashOfConfig":"13"},{"size":2795,"mtime":1625485661420,"results":"17","hashOfConfig":"13"},{"size":336,"mtime":1625126250905,"results":"18","hashOfConfig":"13"},{"size":1472,"mtime":1625134976182,"results":"19","hashOfConfig":"13"},{"size":2102,"mtime":1625665501522,"results":"20","hashOfConfig":"13"},{"size":450,"mtime":1625126892764,"results":"21","hashOfConfig":"13"},{"size":1020,"mtime":1625134137962,"results":"22","hashOfConfig":"13"},{"size":325,"mtime":1625049878528,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"11v8424",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\operations.js",["55","56","57","58"],"import axios from \"axios\";\r\nimport {\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addCommentError,\r\n  // deleteCommentRequest,\r\n  // deleteCommentSuccess,\r\n  // deleteCommentError,\r\n  fetchCommentRequest,\r\n  fetchCommentSuccess,\r\n  fetchCommentError,\r\n  showCommentRequest,\r\n  showCommentSuccess,\r\n  showCommentError,\r\n  postCommentRequest,\r\n  postCommentSuccess,\r\n  postCommentError,\r\n} from \"./actions\";\r\n\r\nexport const BASE_URL = \"https://jordan.ashton.fashion/api/goods/30/\";\r\n\r\nconst getComment =\r\n  (currentPage = 1) =>\r\n  async (dispatch) => {\r\n    dispatch(fetchCommentRequest());\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${BASE_URL}comments?page=${currentPage}`\r\n      );\r\n      dispatch(fetchCommentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchCommentError(error));\r\n    }\r\n  };\r\n\r\nconst showMoreComments = (page) => async (dispatch) => {\r\n  dispatch(showCommentRequest());\r\n  try {\r\n    const { data } = await axios.get(`${BASE_URL}comments?page=${page}`);\r\n    dispatch(showCommentSuccess(data));\r\n  } catch (error) {\r\n    dispatch(showCommentError(error));\r\n  }\r\n};\r\n\r\nconst postComment = (name, text) => async (dispatch) => {\r\n  dispatch(postCommentRequest());\r\n  try {\r\n    const data = await axios.post(\r\n      `${BASE_URL}comments?name=${name}&text=${text}`\r\n    );\r\n    dispatch(postCommentSuccess(data.config.headers));\r\n  } catch (error) {\r\n    dispatch(postCommentError(error));\r\n  }\r\n};\r\n\r\nexport default {\r\n  getComment,\r\n  postComment,\r\n  showMoreComments,\r\n  // addContact,\r\n  // deleteContact,\r\n};\r\n","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\Loader\\Loader.js",[],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\store.js",["59"],"import contactReducer from \"./reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  page: contactReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default { store };\r\n",["60","61"],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\CommentList\\commentList.js",["62"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./commentList.scss\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport shortid from \"shortid\";\r\nimport moment from \"moment\";\r\nconst CommentList = ({ comments }) => (\r\n  <div className=\"row medium-8 large-7 columns\">\r\n    <ul className=\"comment-list block-comments\">\r\n      {comments.map(({ id, name, text, created_at }) => (\r\n        <li key={shortid.generate()}>\r\n          <div className=\"block-comment-content module text\">\r\n            <div className=\"comment-user\">\r\n              <div className=\"comment-user-avatar-wrap\"></div>\r\n              <div className=\"comment-user-text\">\r\n                <a\r\n                  href=\"#0\"\r\n                  data-username=\"cathbailh\"\r\n                  className=\"comment-username\"\r\n                >\r\n                  <span className=\"username\">name:{name}</span>\r\n                </a>\r\n                <span className=\"on\"> {id}</span>\r\n                <span className=\"on\"> </span>\r\n                <a href=\"#0\">\r\n                  <time className=\"block-comment-time\">\r\n                    <p className=\"name-comment\">\r\n                      Created at: {moment(created_at).format(\"lll\")}\r\n                    </p>\r\n                  </time>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"comment-text\">\r\n              <p>{text}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\nCommentList.propTypes = {};\r\nexport default CommentList;\r\n","D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\Form\\form.js",[],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\components\\CommentList\\commentList.container.js",["63"],"import { connect } from \"react-redux\";\r\nimport operations from \"../../redux/operations\";\r\nimport { getVisibleComments } from \"../../redux/selectors\";\r\nimport CommentList from \"./commentList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: getVisibleComments(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CommentList);\r\n",["64","65"],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\reducer.js",[],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\App.js",["66","67"],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\selectors.js",["68"],"import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.page.loading;\r\nexport const getFilter = (state) => state.page.filter;\r\nexport const getAllCont = (state) => state.page.items;\r\n\r\nexport const getDat = (state) => state.page;\r\nexport const getAllComments = (state) => state.page.comments;\r\nexport const getVisibleComments = (state) => {\r\n  const comments = getAllComments(state);\r\n  return comments;\r\n};\r\n",["69","70"],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\redux\\actions.js",[],"D:\\project 2020\\GIT\\react-comment-form-test\\src\\index.js",[],["71","72"],{"ruleId":"73","severity":1,"message":"74","line":3,"column":3,"nodeType":"75","messageId":"76","endLine":3,"endColumn":20},{"ruleId":"73","severity":1,"message":"77","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},{"ruleId":"73","severity":1,"message":"78","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":59,"column":1,"nodeType":"81","endLine":65,"endColumn":3},{"ruleId":"79","severity":1,"message":"80","line":37,"column":1,"nodeType":"81","endLine":37,"endColumn":26},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"73","severity":1,"message":"86","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":17},{"ruleId":"73","severity":1,"message":"87","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":18},{"ruleId":"82","replacedBy":"88"},{"ruleId":"84","replacedBy":"89"},{"ruleId":"73","severity":1,"message":"90","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":21},{"ruleId":"73","severity":1,"message":"91","line":12,"column":3,"nodeType":"75","messageId":"76","endLine":12,"endColumn":17},{"ruleId":"73","severity":1,"message":"92","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":24},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"84","replacedBy":"96"},"no-unused-vars","'addCommentRequest' is defined but never used.","Identifier","unusedVar","'addCommentSuccess' is defined but never used.","'addCommentError' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'PropTypes' is defined but never used.","'operations' is defined but never used.",["97"],["98"],"'getVisibleComments' is defined but never used.","'getAllComments' is defined but never used.","'createSelector' is defined but never used.",["97"],["98"],["97"],["98"],"no-global-assign","no-unsafe-negation"]