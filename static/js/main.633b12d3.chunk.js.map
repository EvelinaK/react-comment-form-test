{"version":3,"sources":["redux/actions.js","redux/operations.js","components/Loader/Loader.js","redux/selectors.js","components/Form/form.js","components/CommentList/commentList.js","components/CommentList/commentList.container.js","App.js","redux/reducer.js","redux/store.js","index.js","components/Loader/Loader.module.css"],"names":["fetchCommentRequest","createAction","fetchCommentSuccess","fetchCommentError","addCommentRequest","addCommentSuccess","addCommentError","showCommentRequest","showCommentSuccess","showCommentError","postCommentRequest","postCommentSuccess","postCommentError","changeFilter","BASE_URL","currentPage","dispatch","a","axios","get","data","name","text","post","config","headers","page","Load","className","styles","loader","type","color","height","width","timeout","getLoading","state","loading","getAllCont","items","getVisibleComments","comments","getAllComments","Form","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","ref","this","htmlFor","nameInputId","placeholder","required","onChange","id","textInputId","isLoadingTodos","Component","connect","operations","CommentList","map","created_at","href","data-username","moment","format","shortid","generate","App","useState","offset","setOffset","pageCount","setPageCount","lastLoadedPage","setLastLoadedPage","useDispatch","useSelector","useEffect","Math","ceil","last_page","onClick","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","forcePage","createReducer","_","payload","filter","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.633b12d3.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchCommentRequest = createAction(\"page/fetchCommentRequest\");\r\nexport const fetchCommentSuccess = createAction(\"page/fetchCommentSuccess\");\r\nexport const fetchCommentError = createAction(\"page/fetchCommentError\");\r\n\r\nexport const addCommentRequest = createAction(\"page/addCommentRequest\");\r\nexport const addCommentSuccess = createAction(\"page/addCommentSuccess\");\r\nexport const addCommentError = createAction(\"page/addCommentError\");\r\n\r\nexport const showCommentRequest = createAction(\"page/showCommentRequest\");\r\nexport const showCommentSuccess = createAction(\"page/showCommentSuccess\");\r\nexport const showCommentError = createAction(\"page/showCommentError\");\r\n\r\nexport const postCommentRequest = createAction(\"page/postCommentRequest\");\r\nexport const postCommentSuccess = createAction(\"page/postCommentSuccess\");\r\nexport const postCommentError = createAction(\"page/postCommentError\");\r\n\r\nexport const changeFilter = createAction(\"page/changeFilter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addCommentError,\r\n  // deleteCommentRequest,\r\n  // deleteCommentSuccess,\r\n  // deleteCommentError,\r\n  fetchCommentRequest,\r\n  fetchCommentSuccess,\r\n  fetchCommentError,\r\n  showCommentRequest,\r\n  showCommentSuccess,\r\n  showCommentError,\r\n  postCommentRequest,\r\n  postCommentSuccess,\r\n  postCommentError,\r\n} from \"./actions\";\r\n\r\nexport const BASE_URL = \"https://jordan.ashton.fashion/api/goods/30/\";\r\n\r\nconst getComment =\r\n  (currentPage = 1) =>\r\n  async (dispatch) => {\r\n    dispatch(fetchCommentRequest());\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${BASE_URL}comments?page=${currentPage}`\r\n      );\r\n      dispatch(fetchCommentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchCommentError(error));\r\n    }\r\n  };\r\n\r\nconst showMoreComments = (page) => async (dispatch) => {\r\n  dispatch(showCommentRequest());\r\n  try {\r\n    const { data } = await axios.get(`${BASE_URL}comments?page=${page}`);\r\n    dispatch(showCommentSuccess(data));\r\n  } catch (error) {\r\n    dispatch(showCommentError(error));\r\n  }\r\n};\r\n\r\nconst postComment = (name, text) => async (dispatch) => {\r\n  dispatch(postCommentRequest());\r\n  try {\r\n    const data = await axios.post(\r\n      `${BASE_URL}comments?name=${name}&text=${text}`\r\n    );\r\n    dispatch(postCommentSuccess(data.config.headers));\r\n  } catch (error) {\r\n    dispatch(postCommentError(error));\r\n  }\r\n};\r\n\r\nexport default {\r\n  getComment,\r\n  postComment,\r\n  showMoreComments,\r\n  // addContact,\r\n  // deleteContact,\r\n};\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport styles from \"./Loader.module.css\";\r\n\r\nconst Load = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#629aa9\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Load;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.page.loading;\r\nexport const getFilter = (state) => state.page.filter;\r\nexport const getAllCont = (state) => state.page.items;\r\n\r\nexport const getDat = (state) => state.page;\r\nexport const getAllComments = (state) => state.page.comments;\r\nexport const getVisibleComments = (state) => {\r\n  const comments = getAllComments(state);\r\n  return comments;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport operations from \"../../redux/operations\";\r\nimport Load from \"../Loader/Loader\";\r\nimport { getLoading } from \"../../redux/selectors\";\r\nimport \"./form.scss\";\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, text } = this.state;\r\n    e.preventDefault();\r\n    if (this.state.name || this.state.text !== \"\") {\r\n      console.log(this.state);\r\n      this.props.onSubmit(name, text);\r\n      this.reset();\r\n      return;\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <div className=\"callout secondary\">\r\n            <h4 className=\"leave-comment\">Add a Comment</h4>\r\n            <form\r\n              className=\"post-edit\"\r\n              ref=\"commentForm\"\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <label className=\"label\" htmlFor={this.nameInputId}>\r\n                Name\r\n                <input\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  ref=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  required\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                  id={this.nameInputId}\r\n                ></input>\r\n              </label>\r\n              <label className=\"label\" htmlFor={this.textInputId}>\r\n                Text\r\n                <textarea\r\n                  ref=\"desc\"\r\n                  className=\"form-input\"\r\n                  type=\"text\"\r\n                  name=\"text\"\r\n                  value={this.state.text}\r\n                  onChange={this.handleChange}\r\n                  id={this.textInputId}\r\n                  placeholder=\"Add your comment here\"\r\n                  required\r\n                />\r\n              </label>\r\n              <button\r\n                id=\"submit\"\r\n                type=\"submit\"\r\n                className=\"button button-outline comment-button action-button expand-right\"\r\n              >\r\n                Add Comment\r\n              </button>\r\n            </form>\r\n          </div>\r\n          {this.props.isLoadingTodos && <Load />}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingTodos: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, text) => dispatch(operations.postComment(name, text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./commentList.scss\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport shortid from \"shortid\";\r\nimport moment from \"moment\";\r\nconst CommentList = ({ comments }) => (\r\n  <div className=\"row medium-8 large-7 columns\">\r\n    <ul className=\"comment-list block-comments\">\r\n      {comments.map(({ id, name, text, created_at }) => (\r\n        <li key={shortid.generate()}>\r\n          <div className=\"block-comment-content module text\">\r\n            <div className=\"comment-user\">\r\n              <div className=\"comment-user-avatar-wrap\"></div>\r\n              <div className=\"comment-user-text\">\r\n                <a\r\n                  href=\"#0\"\r\n                  data-username=\"cathbailh\"\r\n                  className=\"comment-username\"\r\n                >\r\n                  <span className=\"username\">name:{name}</span>\r\n                </a>\r\n                <span className=\"on\"> {id}</span>\r\n                <span className=\"on\"> </span>\r\n                <a href=\"#0\">\r\n                  <time className=\"block-comment-time\">\r\n                    <p className=\"name-comment\">\r\n                      Created at: {moment(created_at).format(\"lll\")}\r\n                    </p>\r\n                  </time>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"comment-text\">\r\n              <p>{text}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\nCommentList.propTypes = {};\r\nexport default CommentList;\r\n","import { connect } from \"react-redux\";\r\nimport operations from \"../../redux/operations\";\r\nimport { getVisibleComments } from \"../../redux/selectors\";\r\nimport CommentList from \"./commentList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: getVisibleComments(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CommentList);\r\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactPaginate from \"react-paginate\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport Form from \"./components/Form/form\";\nimport CommentList from \"./components/CommentList/commentList.container\";\nimport operations from \"./redux/operations\";\nimport {\n  getVisibleComments,\n  getAllCont,\n  getAllComments,\n} from \"./redux/selectors\";\n\nfunction App() {\n  const [offset, setOffset] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const [lastLoadedPage, setLastLoadedPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const items = useSelector(getAllCont);\n\n  useEffect(() => {\n    dispatch(operations.getComment(offset));\n    setPageCount(Math.ceil(items?.last_page));\n  }, [dispatch, offset, items.last_page]);\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected + 1;\n    setOffset(selectedPage);\n    setLastLoadedPage(selectedPage);\n  };\n\n  const handlePageMore = () => {\n    setLastLoadedPage(lastLoadedPage + 1);\n    dispatch(operations.showMoreComments(lastLoadedPage + 1));\n  };\n\n  return (\n    <div className=\"App\">\n      <>\n        <h1>Comment form</h1>\n        <Form />\n        <h2>Comments</h2>\n        {<CommentList />}\n      </>\n      {lastLoadedPage < items.last_page && (\n        <button className=\"button\" type=\"button\" onClick={handlePageMore}>\n          Загрузить ещё{\" \"}\n        </button>\n      )}\n      <>\n        {items && (\n          <ReactPaginate\n            previousLabel={\"prev\"}\n            nextLabel={\"next\"}\n            breakLabel={\"...\"}\n            breakClassName={\"break-me\"}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={handlePageClick}\n            containerClassName={\"pagination\"}\n            subContainerClassName={\"pages pagination\"}\n            activeClassName={\"active\"}\n            forcePage={lastLoadedPage - 1}\n          />\n        )}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addCommentRequest,\r\n  addCommentSuccess,\r\n  addCommentError,\r\n  changeFilter,\r\n  fetchCommentRequest,\r\n  fetchCommentSuccess,\r\n  fetchCommentError,\r\n  showCommentRequest,\r\n  showCommentSuccess,\r\n  postCommentRequest,\r\n  postCommentSuccess,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchCommentSuccess]: (_, { payload }) => payload,\r\n  [addCommentSuccess]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nconst comments = createReducer([], {\r\n  [fetchCommentSuccess]: (_, { payload }) => payload.data,\r\n  [addCommentSuccess]: (state, { payload }) => [...state, ...payload.data],\r\n  [postCommentRequest]: (_, { payload }) => payload,\r\n  [postCommentSuccess]: (state, { payload }) => [...state, payload],\r\n  [showCommentRequest]: (_, { payload }) => payload,\r\n  [showCommentSuccess]: (state, { payload }) => [...state, ...payload.data],\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchCommentRequest]: () => true,\r\n  [fetchCommentSuccess]: () => false,\r\n  [fetchCommentError]: () => false,\r\n  [addCommentRequest]: () => true,\r\n  [addCommentSuccess]: () => false,\r\n  [addCommentError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  comments,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import contactReducer from \"./reducer\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  page: contactReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3epkR\"};"],"sourceRoot":""}